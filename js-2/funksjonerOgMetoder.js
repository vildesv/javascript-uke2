// Funksjoner og metoder oppgave

/******************************************************************************

Oppgave 1: Funksjonen skal ta inn et tall som parameter og returnere
"Oddetall" hvis tallet er et oddetall og "Partall" hvis tallet er et partall.
(PS: Funksjonen skal bruke return, du skal ikke bruke console log inni funksjonen)

******************************************************************************/

// Funksjonen sjekker om tallet er partall eller oddetall
function sjekkTall(tall) {
  return tall % 2 === 0 ? "Partall" : "Oddetall";
}

// Eksempler:
console.log(sjekkTall(4)); // Partall
console.log(sjekkTall(7)); // Oddetall


/******************************************************************************

Oppgave 2: Funksjonen skal ta inn en string som parameter og returnere stringen
i STORE BOKSTAVER med et utropstegn p친 slutten. 

******************************************************************************/

// Tar inn en tekst og returnerer den i store bokstaver med "!" til slutt
const ropUt = (tekst) => tekst.toUpperCase() + "!";

// Eksempler:
console.log(ropUt("Dette er kult")); // DETTE ER KULT!


/******************************************************************************

Oppgave 3: 

Funksjonen skal ta inn 2 parametere:

 - Et navn (string)
 - En time p친 d칮gnet (nummer)

Funksjonen skal returnere:
"Ugyldig tid" hvis timeverdien er mindre enn 0.
"God natt (mottatt navn)" hvis timeverdien er mellom 0 og 5.
"God morgen (mottatt navn)" hvis timeverdien er mellom 6 og 11.
"God dag (mottatt navn)" hvis timeverdien er mellom 12 og 17.
"God kveld (mottatt navn)" hvis timeverdien er mellom 18 og 23.
"Ugyldig tid" hvis timeverdien er st칮rre enn 23.

Hvis ingen timeverdi mottas, skal funksjonen returnere en feilmelding.

******************************************************************************/

// Returnerer en passende hilsen basert p친 tidspunkt
function hils(navn, time) {
  if (time === undefined) return "Feil: mangler timeverdi";
  if (time < 0 || time > 23) return "Ugyldig tid";
  if (time <= 5) return `God natt ${navn}`;
  if (time <= 11) return `God morgen ${navn}`;
  if (time <= 17) return `God dag ${navn}`;
  return `God kveld ${navn}`;
}

// Eksempler:
console.log(hils("Anders", 3));  // God natt Anders
console.log(hils("Lise", 10));   // God morgen Lise
console.log(hils("Maja", 15));   // God dag Maja
console.log(hils("Per", 21));    // God kveld Per
console.log(hils("Test"));       // Feil: mangler timeverdi


/******************************************************************************
 
Oppgave 4: Funksjonen skal ta inn en array som parameter og returnere arrayen
med f칮rste og siste indeks fjernet.

******************************************************************************/

// Returnerer ny array uten f칮rste og siste element
const fjernYtterste = (arr) => arr.slice(1, -1);

// Eksempler:
console.log(fjernYtterste(["R칮d", "Gr칮nn", "Bl친", "Gul"])); // ["Gr칮nn", "Bl친"]
console.log(fjernYtterste(["En", "To", "Tre", "Fire", "Fem", "Seks"])); // ["To", "Tre", "Fire", "Fem"]


/******************************************************************************

Oppgave 5: 

Bruk stringmetoder p친 stringen for 친 gj칮re f칮lgende:
- Erstatt ordet "vanskelig" med "g칮y".
- Fjern mellomrom fra starten og slutten av stringen.

Returner deretter den oppdaterte stringen. 
Eksempel 1: "Javascript er vanskelig" skal returnere "Javascript er g칮y".
Eksempel 2: "Det er vanskelig 친 bruke metoder" skal returnere "Det er g칮y 친 bruke metoder".
Eksempel 3: "vanskelig" skal returnere "g칮y".

******************************************************************************/

// Erstatter "vanskelig" med "g칮y" og fjerner whitespace
function endreSetning(str) {
  return str.trim().replaceAll("vanskelig", "g칮y");
}

// Eksempler:
console.log(endreSetning("Javascript er vanskelig")); // "Javascript er g칮y"
console.log(endreSetning("Det er vanskelig 친 bruke metoder")); // "Det er g칮y 친 bruke metoder"
console.log(endreSetning("vanskelig")); // "g칮y"


/******************************************************************************

Oppgave 6: 

Fullf칮r f칮lgende steg for 친 manipulere "items"-arrayet. Hvert steg skal
fullf칮res ved 친 bruke passende array-metoder.

Steg 1: Fjern det f칮rste elementet ("Bok") fra arrayen ved hjelp av riktig metode.
Steg 2: Finn og erstatt "Viskel칝r" med "Linjal" i arrayen.
Steg 3: Bruk splice-metoden til 친 fjerne b친de "Penn" og "Notatbok", og legg til "Markeringspenn" i deres plass.
Steg 4: Kombiner alle elementene i arrayen til en enkelt string ved 친 bruke " | " som separator.

Ekstra utfordring: Lag et nytt array som kun inkluderer elementer som inneholder bokstaven "e".

******************************************************************************/

const items = ["Bok", "Penn", "Notatbok", "Viskel칝r", "Blyant", "Mark칮r"];

// Steg 1: Fjern f칮rste element
items.shift();

// Steg 2: Erstatt "Viskel칝r" med "Linjal"
const indexViskel칝r = items.indexOf("Viskel칝r");
if (indexViskel칝r !== -1) {
  items[indexViskel칝r] = "Linjal";
}

// Steg 3: Bytt ut "Penn" og "Notatbok" med "Markeringspenn"
const indexPenn = items.indexOf("Penn");
if (indexPenn !== -1) {
  items.splice(indexPenn, 2, "Markeringspenn");
}

// Steg 4: Kombiner til 칠n string med " | "
const kombinert = items.join(" | ");
console.log(kombinert); // Eks: "Markeringspenn | Linjal | Blyant | Mark칮r"

// Ekstra: Lag ny array med bare elementer som inneholder bokstaven "e"
const medE = items.filter(item => item.includes("e"));
console.log(medE);


/******************************************************************************

Oppgave 7 - Ekstra utfordring #1: Funksjonen skal ta inn 2 parametere, en array og en string.

Sjekk om arrayen inneholder stringen. Hvis den gj칮r det, fjern elementet
fra arrayet og returner den oppdaterte arrayen.

Hvis arrayet ikke inneholder stringen, legg stringen til p친 slutten
av arrayet og returner det oppdaterte arrayet.

Eksempel 1: (["R칮d", "Gr칮nn"], "Bl친") --> ["R칮d", "Gr칮nn", "Bl친"]
Eksempel 2: (["R칮d", "Gr칮nn", "Bl친"], "Gr칮nn") --> ["R칮d", "Bl친"]
Eksempel 3: (["En", "To", "Tre"], "Fire") --> ["En", "To", "Tre", "Fire"]
Eksempel 4: (["En", "To", "Tre"], "To") --> ["En", "Tre"]

******************************************************************************/

// Legger til string i array hvis den ikke finnes, ellers fjerner den
function oppdaterArray(arr, element) {
  const index = arr.indexOf(element);
  if (index !== -1) {
    arr.splice(index, 1);
  } else {
    arr.push(element);
  }
  return arr;
}

// Eksempler:
console.log(oppdaterArray(["R칮d", "Gr칮nn"], "Bl친")); // ["R칮d", "Gr칮nn", "Bl친"]
console.log(oppdaterArray(["R칮d", "Gr칮nn", "Bl친"], "Gr칮nn")); // ["R칮d", "Bl친"]


/******************************************************************************

Oppgave 8 - Ekstra utfordring #2: Funksjonen skal ta inn ett parameter.

Hvis parameteret er en string:
Returner stringen med "游땙" lagt til i starten og slutten.

Hvis parameteret er et tall:
Doble verdien, konverter den til en string, og returner den med "游땙" lagt til i
starten og slutten.

Hvis parameteret er en boolean:
Returner "游땙Ja游땙" hvis parameteret er true, eller "游땙Slapp av游땙" hvis parameteret er false.

Hvis parameteret er en annen datatype:
Returner "游땙Kun primitive verdier游땙".

******************************************************************************/
// Returnerer forskjellig string basert p친 parameter-type
const emojiSvar = (input) => {
  if (typeof input === "string") return `游땙${input}游땙`;
  if (typeof input === "number") return `游땙${(input * 2).toString()}游땙`;
  if (typeof input === "boolean") return input ? "游땙Ja游땙" : "游땙Slapp av游땙";
  return "游땙Kun primitive verdier游땙";
};

// Eksempler:
console.log(emojiSvar("Kult"));       // 游땙Kult游땙
console.log(emojiSvar(7));            // 游땙14游땙
console.log(emojiSvar(true));         // 游땙Ja游땙
console.log(emojiSvar(false));        // 游땙Slapp av游땙
console.log(emojiSvar({ test: 1 }));  // 游땙Kun primitive verdier游땙
